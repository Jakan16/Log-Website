version: '3.7'
services:
  nginx: 
    build: './nginx'
    #image: 'logops/logops_nginx:develop'
    environment:
      NGINX_GLOBAL_URL: ${NGINX_GLOBAL_URL:-http://apache:80}
      NGINX_LOGSTORE_URL: ${NGINX_LOGSTORE_URL:-http://nginx:8080}
      NGINX_ALARMSERVICE_URL: ${NGINX_ALARMSERVICE_URL:-http://nginx:8085}
      NGINX_JOLIECLOUD_URL: ${NGINX_JOLIECLOUD_URL:-http://nginx:8001}
      NGINX_AUTHSERVICE_URL: ${NGINX_AUTHSERVICE_URL:-http://nginx:7900}
      NGINX_GETPARSERHOST_URL: ${NGINX_GETPARSERHOST_URL:-http://nginx:8006}
    networks: 
      - frontend
      - backend
    ports:
      - 80:80
      - 8443:443
    depends_on:
      - php
      - mysql
      - apache
    command: /bin/bash -c "envsubst < /etc/nginx/conf.d/tmp > /etc/nginx/conf.d/reverse-proxy.conf && nginx -g 'daemon off;'" 
  apache:
    container_name: apache
    build: './apache'
    image: 'logops/logops_apache:develop'
    restart: always
    environment:
      php_ADDR: 'php'
    networks: 
      - frontend
      - backend
    volumes:
      - ./public_html:/usr/local/apache2/htdocs
      - ./cert/:/usr/local/apache2/cert/
    depends_on:
      - php
      - mysql
  php:
    container_name: php
    build: './php'
    image: 'logops/logops_php:develop'
    restart: always
    environment:
      MYSQL_ADDR: 'mysql'
      GLOBAL_URL: ${GLOBAL_URL:-nginx}
      LOGSTORE_URL: ${LOGSTORE_URL:-nginx}
      ALARMSERVICE_URL: ${ALARMSERVICE_URL:-nginx}
      JOLIECLOUD_URL: ${JOLIECLOUD_URL:-nginx}
      AUTHSERVICE_URL: ${AUTHSERVICE_URL:-nginx/auth}
    networks: 
      - backend
    volumes:
      - ./public_html:/usr/local/apache2/htdocs
      - ./tmp:/usr/local/tmp
  mysql:
    container_name: mysql
    build: './mysql'
    image: 'logops/logops_mysql:develop'
    restart: always
    ports:
      - 3306:3306
    networks:
      - frontend
      - backend
    volumes:
      - ./database:/var/lib/mysql
  # phpmyadmin
  phpmyadmin:
    container_name: phpmyadmin
    depends_on:
      - mysql
    image: phpmyadmin/phpmyadmin
    restart: always
    ports:
      - '8080:80'
    environment:
      PMA_HOST: mysql
      MYSQL_ROOT_PASSWORD: 123456
      MYSQL_USER: my_sql_user
      MYSQL_PASSWORD: my_sql_password
    networks:
      - backend
      - frontend
networks: 
  backend:
  frontend:
